@import "tailwindcss";

@layer base {
  @theme {
    --color-background: hsl(0,0%,100%);
    --color-foreground: hsl(224,71.4%,4.1%);
    --color-card: hsl(0,0%,100%);
    --color-card-foreground: hsl(224,71.4%,4.1%);
    --color-popover: hsl(0,0%,100%);
    --color-popover-foreground: hsl(224,71.4%,4.1%); /* Corrected hsl formatting */
    --color-primary: hsl(210, 46%, 74%);             /* New: Dusty Blue */
    --color-primary-foreground: hsl(210, 25%, 15%);  /* New: Darker blue-gray for contrast */
    --color-secondary: hsl(100, 22%, 75%);           /* New: Sage Green */
    --color-secondary-foreground: hsl(100, 25%, 15%);/* New: Darker green-gray for contrast */
    --color-muted: hsl(220,13%,91%);
    --color-muted-foreground: hsl(220,8.9%,46.1%);
    --color-accent: hsl(20, 50%, 70%);               /* New: Warm Terracotta (Tertiary) */
    --color-accent-foreground: hsl(20, 30%, 15%);    /* New: Darker terracotta/brown for contrast */
    --color-destructive: hsl(0,84.2%,60.2%);
    --color-destructive-foreground: hsl(210,20%,98%);
    --color-border: hsl(220,13%,91%);
    --color-input: hsl(220,13%,91%);
    --color-ring: hsl(210, 46%, 74%);                /* New: Primary color for ring */
    --color-chart-1: hsl(12,76%,61%);
    --color-chart-2: hsl(173,58%,39%);
    --color-chart-3: hsl(197,37%,24%);
    --color-chart-4: hsl(43,74%,66%);
    --color-chart-5: hsl(27,87%,67%);
    --radius: 0.5rem;
  }

  /* Dark Mode - Updated Palette */
  .dark {
    --background: 224 71.4% 4.1%;            /* Dark Slate Gray */
    --foreground: 210 20% 98%;               /* Almost White */
    --card: 224 71.4% 4.1%;
    --card-foreground: 210 20% 98%;
    --popover: 224 71.4% 4.1%;
    --popover-foreground: 210 20% 98%;
    --primary: 210 46% 55%;                  /* New: Dark Mode Dusty Blue */
    --primary-foreground: 210 30% 95%;       /* New: Light blue/white for contrast */
    --secondary: 100 25% 38%;               /* New: Dark Mode Sage Green */
    --secondary-foreground: 100 20% 90%;     /* New: Light green/gray for contrast */
    --muted: 215 27.9% 16.9%;
    --muted-foreground: 217.5 16.7% 61%;
    --accent: 20 50% 45%;                   /* New: Dark Mode Warm Terracotta (Tertiary) */
    --accent-foreground: 20 25% 90%;        /* New: Light terracotta/off-white for contrast */
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 20% 98%;
    --border: 215 27.9% 16.9%;
    --input: 215 27.9% 16.9%;
    --ring: 210 46% 55%;                     /* New: Dark Mode Primary for ring */
  }

  /* --- NEW: Apply caret color --- */
  input,
  textarea {
    @apply caret-primary; /* Sets caret color to --primary */
  }
  /* Ensure caret color applies in dark mode too if needed */
  .dark input,
  .dark textarea {
     @apply caret-primary;
  }
}

/* Apply base body styles */
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

/* --- NEW: Custom Selection Styles --- */
::selection {
  @apply bg-primary text-primary-foreground;
}
::-moz-selection { /* Firefox prefix */
  @apply bg-primary text-primary-foreground;
}
/* --- End Custom Selection Styles --- */

/* react-day-picker specific Tailwind overrides/defaults */
/* These are CSS variables that react-day-picker uses.
   You can customize them to match your ShadCN theme.
   Refer to your ShadCN theme variables (e.g., in variables.css or :root)
   and map them here.
*/
.rdp {
  --rdp-cell-size: 40px; /* Or your preferred cell size, e.g., w-10 h-10 equivalent */
  --rdp-accent-color: hsl(var(--primary)); /* Example: Using ShadCN primary color */
  --rdp-background-color: hsl(var(--primary) / 0.1); /* Example: Lighter primary for hover */

  --rdp-accent-color-dark: hsl(var(--primary)); /* Dark mode (if applicable) */
  --rdp-background-color-dark: hsl(var(--primary) / 0.2); /* Dark mode (if applicable) */

  --rdp-selected-color: hsl(var(--primary-foreground)); /* Text color for selected day */

  /* Text color for non-selected days */
  --rdp-color: hsl(var(--foreground));
  /* --rdp-caption-color: hsl(var(--foreground)); */
  /* --rdp-nav-button-color: hsl(var(--foreground)); */

  /* Today's date styles */
  --rdp-today-color: hsl(var(--accent-foreground)); /* Text color for today */
  --rdp-today-border: 1px solid hsl(var(--accent)); /* Border for today */


  margin: 1em 0; /* Default margin, adjust as needed */
}

/* Style for the navigation buttons (previous/next month) */
.rdp-nav_button {
  width: var(--rdp-cell-size);
  height: var(--rdp-cell-size);
  border-radius: hsl(var(--radius)); /* Use your ShadCN border radius variable */
}
.rdp-nav_button:hover:not([disabled]) {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}


/* Style for individual day cells */
.rdp-day {
  border-radius: hsl(var(--radius)); /* Use your ShadCN border radius variable */
}

/* Hover effect for non-selected, non-disabled days */
.rdp-button:hover:not([disabled]):not(.rdp-day_selected) {
  background-color: var(--rdp-background-color) !important;
}

/* Selected day style */
.rdp-day_selected,
.rdp-day_selected:hover {
  background-color: var(--rdp-accent-color) !important;
  color: var(--rdp-selected-color) !important;
}
.rdp-day_selected:focus-visible { /* Ensure focus ring is visible on selected day */
    outline: 2px solid var(--rdp-accent-color);
    outline-offset: 2px;
}


/* Today's date style */
.rdp-day_today {
  color: var(--rdp-today-color);
  font-weight: 600; /* Make today's date a bit bolder */
}
.rdp-day_today:not(.rdp-day_selected) { /* If today is not selected, show its border */
   border: var(--rdp-today-border);
}


/* Styles for the dropdowns if using captionLayout="dropdown-buttons" */
.rdp-caption_dropdowns {
  display: flex;
  gap: 0.5rem; /* Tailwind: gap-2 */
}

.rdp-dropdown_month, .rdp-dropdown_year {
  padding: 0.375rem 0.5rem; /* Tailwind: py-1.5 px-2 */
  border-radius: hsl(var(--radius)); /* Tailwind: rounded-md */
  border: 1px solid hsl(var(--border)); /* Tailwind: border border-input */
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
  font-size: 0.875rem; /* text-sm */
}
.rdp-dropdown_month:focus-visible, .rdp-dropdown_year:focus-visible {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
    border-color: hsl(var(--primary));
}

/* Styling for the caption (Month Year text) */
.rdp-caption_label {
    font-weight: 500; /* medium */
    font-size: 1rem; /* text-base */
    color: hsl(var(--foreground));
}

/* Ensure disabled days are visually distinct */
.rdp-day_disabled {
    opacity: 0.5;
    /* color: hsl(var(--muted-foreground)); */ /* Or a specific disabled text color */
}

/* Head cells (Su, Mo, Tu...) */
.rdp-head_cell {
    font-size: 0.875rem; /* text-sm */
    font-weight: 500; /* medium */
    color: hsl(var(--muted-foreground));
}

/* ... (your existing globals.css content) ... */

/* react-day-picker specific Tailwind overrides/defaults */
/* ... (your existing .rdp styles) ... */


/* ==========================================================================
   React Datepicker Styles
   ========================================================================== */

/* Wrapper for the input and the datepicker popper */
.react-datepicker-wrapper {
  @apply inline-block w-full; /* Or 'w-auto' if you prefer inline size */
}

/* The main datepicker container (popper) */
.react-datepicker {
  @apply bg-popover text-popover-foreground border border-border rounded-md shadow-lg;
  font-family: inherit; /* Inherit font from the body */
  font-size: 0.875rem; /* text-sm */
}

/* Popper arrow/triangle - often hidden or styled minimally with ShadCN */
.react-datepicker__triangle {
  @apply hidden; /* Common to hide in ShadCN style */
}
/* If you want to style the triangle (arrow) to match card background */
/* .react-datepicker__triangle::before,
.react-datepicker__triangle::after {
  border-bottom-color: hsl(var(--color-popover)) !important;
}
.react-datepicker__triangle::before {
  border-bottom-color: hsl(var(--color-border)) !important;
} */


/* Header section */
.react-datepicker__header {
  @apply bg-popover p-2 border-b border-border rounded-t-md;
  /* For a more distinct header background if desired:
  @apply bg-muted p-2 border-b border-border rounded-t-md;
  */
}

/* Current month and year display */
.react-datepicker__current-month {
  @apply text-popover-foreground font-semibold text-sm my-1;
}

/* Navigation buttons (previous/next month) */
.react-datepicker__navigation {
  @apply absolute top-3 w-8 h-8 flex items-center justify-center rounded-md;
  /* Using accent for hover, consistent with rdp */
}
.react-datepicker__navigation:hover {
  @apply bg-accent text-accent-foreground;
}
.react-datepicker__navigation--previous {
  @apply left-2;
}
.react-datepicker__navigation--next {
  @apply right-2;
}
.react-datepicker__navigation-icon::before {
  @apply border-popover-foreground !important; /* Ensure arrows use foreground color */
  border-width: 2px 2px 0 0 !important; /* Tailwind: border-r-2 border-t-2 */
  height: 7px !important;
  width: 7px !important;
}
.react-datepicker__navigation:hover .react-datepicker__navigation-icon::before {
   @apply border-accent-foreground !important;
}


/* Day names row (Su, Mo, Tu...) */
.react-datepicker__day-names {
  @apply flex mt-2 mb-1;
}
.react-datepicker__day-name {
  @apply flex-1 text-center text-muted-foreground font-medium text-xs uppercase tracking-wider p-1;
}

/* Month container - holds all the weeks and days */
.react-datepicker__month-container {
  @apply p-2;
}
.react-datepicker__month {
  @apply space-y-1;
}

/* Week row */
.react-datepicker__week {
  @apply flex space-x-1;
}

/* Individual day cells */
.react-datepicker__day {
  @apply flex-1 h-9 w-9 flex items-center justify-center rounded-md text-sm;
  @apply text-popover-foreground transition-colors;
}
.react-datepicker__day:hover {
  @apply bg-primary/20; /* Lighter primary for hover, similar to rdp-background-color */
}

/* Selected day */
.react-datepicker__day--selected,
.react-datepicker__day--in-selecting-range, /* For range selection */
.react-datepicker__day--in-range {         /* For range selection */
  @apply bg-primary text-primary-foreground;
}
.react-datepicker__day--selected:hover,
.react-datepicker__day--in-selecting-range:hover,
.react-datepicker__day--in-range:hover {
  @apply bg-primary/90 text-primary-foreground; /* Slightly darker on hover when selected */
}

/* Today's date */
.react-datepicker__day--today {
  @apply font-semibold;
  /* To make today more prominent like rdp-day_today */
  @apply ring-1 ring-accent ring-inset; /* Using accent color for today's ring */
  /* Or just different text color:
  @apply text-accent;
  */
}
.react-datepicker__day--today.react-datepicker__day--selected {
    @apply ring-0; /* Remove ring if today is also selected */
}


/* Keyboard selected (focus state) */
.react-datepicker__day--keyboard-selected {
  @apply bg-primary/30 ring-2 ring-ring ring-offset-background;
}

/* Disabled days */
.react-datepicker__day--disabled {
  @apply text-muted-foreground opacity-50 cursor-not-allowed;
}
.react-datepicker__day--disabled:hover {
  @apply bg-transparent;
}

/* Days outside the current month */
.react-datepicker__day--outside-month {
  @apply text-muted-foreground opacity-70;
}
.react-datepicker__day--outside-month:hover {
  @apply bg-transparent; /* Or a very subtle hover if desired */
}


/* Month and Year dropdowns */
.react-datepicker__year-dropdown-container,
.react-datepicker__month-dropdown-container {
  @apply mx-0.5; /* Tailwind: mx-[2px] or similar for small gap */
}

.react-datepicker__year-dropdown,
.react-datepicker__month-dropdown,
.react-datepicker__month-year-dropdown { /* For showMonthYearDropdown */
  @apply bg-background border border-input rounded-md shadow-sm p-1;
  /* Ensure dropdown options are scrollable if many */
  max-height: 150px; /* Adjust as needed */
  overflow-y: auto;
}
.react-datepicker__year-option,
.react-datepicker__month-option,
.react-datepicker__month-year-option {
  @apply px-3 py-1.5 text-sm text-foreground rounded-sm cursor-pointer;
}
.react-datepicker__year-option:hover,
.react-datepicker__month-option:hover,
.react-datepicker__month-year-option:hover {
  @apply bg-primary/20;
}
.react-datepicker__year-option--selected_year,  /* Might need to check exact class for selected option */
.react-datepicker__month-option--selected_month {
  @apply bg-primary text-primary-foreground;
}
.react-datepicker__month-option--selected_month:hover {
  @apply bg-primary/90;
}


/* Specific styling for the select elements used for month/year in the header if `showMonthDropdown` or `showYearDropdown` are used */
.react-datepicker__header select {
  @apply px-2 py-1 text-sm border border-input rounded-md bg-background text-foreground;
  /* Mimicking your .rdp-dropdown_month styles */
}
.react-datepicker__header select:focus {
  @apply outline-none ring-2 ring-ring border-primary;
}


/* Time picker styles (if you use showTimeSelect) */
.react-datepicker__time-container {
  @apply border-l border-border p-2;
  width: 100px; /* Adjust as needed */
}
.react-datepicker__time-container .react-datepicker__time {
  @apply h-auto; /* Reset if fixed height is an issue */
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {
  @apply w-full h-full overflow-y-auto;
  scrollbar-width: thin; /* For Firefox */
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list {
  @apply list-none p-0 m-0 flex flex-col items-center;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item {
  @apply px-2 py-1.5 w-full text-center text-sm text-foreground rounded-md cursor-pointer;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item:hover {
  @apply bg-primary/20;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected {
  @apply bg-primary text-primary-foreground font-semibold;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--disabled {
  @apply text-muted-foreground opacity-50 cursor-not-allowed;
}
.react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--disabled:hover {
  @apply bg-transparent;
}

/* Clear button (if using isClearable) */
.react-datepicker__close-icon {
  @apply absolute right-3 top-1/2 -translate-y-1/2 p-0.5 rounded-full cursor-pointer;
  /* Give it a background on hover to make it more visible */
}
.react-datepicker__close-icon:hover {
   background-color: hsl(var(--muted)); /* Using HSL direct as @apply might not work well for complex pseudo like this */
}
.react-datepicker__close-icon::after {
  @apply bg-muted-foreground text-lg; /* Make the 'x' slightly bigger and use muted foreground */
  content: "\\00d7"; /* This is the '×' character */
  font-size: 1.25rem; /* text-xl */
  line-height: 1;
  display: block;
  width: 100%;
  height: 100%;
  text-align: center;
}
.react-datepicker__close-icon:hover::after {
  color: hsl(var(--destructive)); /* Change 'x' to destructive color on hover */
}


/* Portal mode (when the datepicker is rendered in a portal) */
.react-datepicker-popper[data-placement^="bottom"] .react-datepicker__triangle {
  /* Adjust if you decide to show the triangle */
  @apply hidden;
}
.react-datepicker-popper[data-placement^="top"] .react-datepicker__triangle {
  @apply hidden;
}

/* Dark mode considerations:
   Most styles should adapt automatically due to CSS variables.
   However, if you find specific elements that don't look right in dark mode,
   you can add overrides here. For example:
*/
/*
.dark .react-datepicker__header {
  @apply bg-slate-800;
}
.dark .react-datepicker__day:hover {
  @apply bg-slate-700;
}
*/

/* Ensure the input field itself is styled according to your theme.
   This is typically handled by your global input styles or by applying
   Tailwind classes directly to the <DatePicker /> component's customInput prop.
   Example for a customInput:
   <input className="w-full px-3 py-2 border border-input bg-background text-foreground rounded-md focus:ring-ring focus:ring-2 focus:outline-none" />
*/

